import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import static java.lang.Math.abs;


public class main extends JFrame implements ActionListener {

    private JTextField tValue1, tValue2, tValue3, tValue4, tValue5, tValue6;
    private JLabel lLabel1;
    private JButton bButton1;






    public main()
    {
        setSize(400,200);
        setTitle("CRC-16 Checksum calculator");
        setLayout(null);

        bButton1 = new JButton("Calculate");
        bButton1.setBounds(120,100,150,20);
        add(bButton1);
        bButton1.addActionListener(this);

        tValue1 = new JTextField("0");
        tValue1.setBounds(20,50,40,20);
        add(tValue1);
        tValue1.addActionListener(this);

        tValue2 = new JTextField("0");
        tValue2.setBounds(70,50,40,20);
        add(tValue2);
        tValue2.addActionListener(this);

        tValue3 = new JTextField("0");
        tValue3.setBounds(120,50,40,20);
        add(tValue3);
        tValue3.addActionListener(this);

        tValue4 = new JTextField("0");
        tValue4.setBounds(170,50,40,20);
        add(tValue4);
        tValue4.addActionListener(this);

        tValue5 = new JTextField("0");
        tValue5.setBounds(220,50,40,20);
        add(tValue5);
        tValue5.addActionListener(this);

        tValue6 = new JTextField("0");
        tValue6.setBounds(270,50,40,20);
        add(tValue6);
        tValue6.addActionListener(this);

    }





    public static short Compute_CRC16_Simple(byte[] bytes)
    {
        short generator = 0x1021; /* divisor is 16bit */
        short crc = 0; /* CRC value is 16bit */

        for (byte b : bytes)
        {
            crc ^= (short)(b << 8); /* move byte into MSB of 16bit CRC */

            for (int i = 0; i < 8; i++)
            {
                if ((crc & 0x8000) != 0) /* test for MSB = bit 15 */
                {
                    crc = (short)((crc << 1) ^ generator);
                }
                else
                {
                    crc <<= 1;
                }
            }
        }

        System.out.println("CRC-8 Checksum = " + abs(crc));
        System.out.println("CRC-8 Checksum = " + Integer.toHexString(abs(crc)).toUpperCase());

        return crc;
    }




    public static void main(String[] args) {

        main apk = new main();
        apk.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        apk.setVisible(true);




    }

    @Override
    public void actionPerformed(ActionEvent e) {

        Object zrodlo = e.getSource();

        if(zrodlo == bButton1)
        {
            byte value1 = (byte) Integer.parseInt(tValue1.getText(),16);
            byte value2 = (byte) Integer.parseInt(tValue2.getText(),16);
            byte value3 = (byte) Integer.parseInt(tValue3.getText(),16);
            byte value4 = (byte) Integer.parseInt(tValue4.getText(),16);
            byte value5 = (byte) Integer.parseInt(tValue5.getText(),16);
            byte value6 = (byte) Integer.parseInt(tValue6.getText(),16);

            byte[] bytes = {value1, value2, value3, value4, value5, value6};
            Compute_CRC16_Simple(bytes);
        }
    }
}
